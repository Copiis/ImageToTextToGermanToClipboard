// ==UserScript==
// @name         Image Text Reader and Translator to Clipboard (Google Translate)
// @namespace    http://tampermonkey.net/
// @version      0.9
// @description  Reads text from images on right-click, translates it to English, and copies it to the clipboard
// @author       Copiis
// @match        *://*/*
// @require      https://cdn.jsdelivr.net/npm/tesseract.js@4.0.2/dist/tesseract.min.js
// @grant        GM_xmlhttpRequest
// @connect      translate.google.com
// ==/UserScript==

(function() {
    'use strict';

    // Function to clean text from unwanted characters
    function cleanText(text) {
        return text.replace(/[^\x20-\x7E]/g, ' ').trim(); // Keep only printable ASCII characters
    }

    // Function to extract text from an image, translate it, and copy it
    async function readAndTranslateTextOnRightClick(imgElement) {
        try {
            // Start text recognition
            const { data: { text } } = await Tesseract.recognize(imgElement.src, 'eng'); // Assume original text is in English
            console.log("Recognized text:", text);

            if (!text) {
                alert("No text recognized. Please try another image.");
                return;
            }

            // Clean the text
            const cleanedText = cleanText(text);
            if (!cleanedText) {
                alert("The recognized text contains no valid characters.");
                return;
            }

            // Translate text to English
            const translatedText = await translateText(cleanedText);  // Target: English
            console.log("Translated text:", translatedText);

            // Copy the translated text to the clipboard
            navigator.clipboard.writeText(translatedText).then(() => {
                alert("Translated text has been copied to the clipboard: " + translatedText);
            }).catch(err => {
                console.error("Error copying to clipboard:", err);
            });
        } catch (error) {
            console.error("Error in text recognition or translation:", error);
            alert("An error occurred. Please check the console for details.");
        }
    }

    // Function to translate text using Google Translate
    async function translateText(text) {
        const url = `https://translate.google.com/m?hl=en&sl=en&tl=en&ie=UTF-8&prev=_m&q=${encodeURIComponent(text)}`;

        return new Promise((resolve, reject) => {
            GM_xmlhttpRequest({
                method: "GET",
                url: url,
                onload: function(response) {
                    if (response.status === 200) {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(response.responseText, "text/html");
                        const translationElement = doc.querySelector(".result-container"); // CSS class of the translated text

                        if (translationElement) {
                            resolve(translationElement.innerText);
                        } else {
                            reject("Translation not found.");
                        }
                    } else {
                        reject("Error accessing the Google Translate page.");
                    }
                },
                onerror: function() {
                    reject("Network error accessing the Google Translate page.");
                }
            });
        });
    }

    // Add context menu event only once for each image
    document.querySelectorAll('img').forEach(img => {
        img.addEventListener('contextmenu', (event) => {
            event.preventDefault(); // Prevent the default context menu
            readAndTranslateTextOnRightClick(img);  // Right-click on image starts text recognition and translation
        });
    });
})();
